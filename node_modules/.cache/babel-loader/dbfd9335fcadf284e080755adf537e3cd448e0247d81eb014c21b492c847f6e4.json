{"ast":null,"code":"var _jsxFileName = \"/Users/betty/Desktop/react-code-challenges/src/pixel-art/pixel-art.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorContext = /*#__PURE__*/createContext({\n  color: 'lightGrey',\n  setColor: () => {}\n});\nconst ColorPicker = () => {\n  const colors = ['red', 'blue', 'yellow', 'green', 'black', 'white', 'purple'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Choose a color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), colors.map(color => /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: color\n      }\n    }, color, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 34\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = ColorPicker;\nconst Pixel = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '20px',\n      width: '20px',\n      backgroundColor: 'lightGrey',\n      margin: '1px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n_c2 = Pixel;\nconst Pixels = () => {\n  const pixels = [];\n  for (let i = 0; i < 100; i++) pixels.push( /*#__PURE__*/_jsxDEV(Pixel, {}, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 47\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(10, 1fr)',\n      width: '210px',\n      margin: '0 auto'\n    },\n    children: pixels\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c3 = Pixels;\nconst PixelArt = () => {\n  _s();\n  const [color, setColor] = useState('lightGrey');\n  return /*#__PURE__*/_jsxDEV(ColorContext.Provider, {\n    value: {\n      color,\n      setColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(ColorPicker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pixels, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(PixelArt, \"WytTvYP1EtLX5R+VbgBq/AYS2l0=\");\n_c4 = PixelArt;\nexport default PixelArt;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ColorPicker\");\n$RefreshReg$(_c2, \"Pixel\");\n$RefreshReg$(_c3, \"Pixels\");\n$RefreshReg$(_c4, \"PixelArt\");","map":{"version":3,"names":["React","createContext","useState","ColorContext","color","setColor","ColorPicker","colors","map","backgroundColor","Pixel","height","width","margin","Pixels","pixels","i","push","display","gridTemplateColumns","PixelArt"],"sources":["/Users/betty/Desktop/react-code-challenges/src/pixel-art/pixel-art.js"],"sourcesContent":["import React, { createContext, useState } from 'react'\n\nconst ColorContext = createContext({\n    color: 'lightGrey',\n    setColor: () => { }\n})\n\nconst ColorPicker = () => {\n    const colors = ['red', 'blue', 'yellow', 'green', 'black', 'white', 'purple']\n    return (\n        <div>\n            <h1>Choose a color</h1>\n            {colors.map(color => <button key={color} style={{ backgroundColor: color }} />)}\n        </div>\n    )\n}\n\nconst Pixel = () => {\n    return <div style={{ height: '20px', width: '20px', backgroundColor: 'lightGrey', margin: '1px' }} />\n}\n\nconst Pixels = () => {\n    const pixels = []\n    for (let i = 0; i < 100; i++) pixels.push(<Pixel key={i} />)\n    return (\n        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(10, 1fr)', width: '210px', margin: '0 auto' }}>\n            {pixels}\n        </div>\n    )\n}\n\nconst PixelArt = () => {\n    const [color, setColor] = useState('lightGrey');\n    return (\n        <ColorContext.Provider value={{ color, setColor }}>\n            <ColorPicker />\n            <Pixels />\n        </ColorContext.Provider>\n    )\n}\nexport default PixelArt;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAEtD,MAAMC,YAAY,gBAAGF,aAAa,CAAC;EAC/BG,KAAK,EAAE,WAAW;EAClBC,QAAQ,EAAE,MAAM,CAAE;AACtB,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAG,MAAM;EACtB,MAAMC,MAAM,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC;EAC7E,oBACI;IAAA,wBACI;MAAA,UAAI;IAAc;MAAA;MAAA;MAAA;IAAA,QAAK,EACtBA,MAAM,CAACC,GAAG,CAACJ,KAAK,iBAAI;MAAoB,KAAK,EAAE;QAAEK,eAAe,EAAEL;MAAM;IAAE,GAAzCA,KAAK;MAAA;MAAA;MAAA;IAAA,QAAuC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAC7E;AAEd,CAAC;AAAA,KARKE,WAAW;AAUjB,MAAMI,KAAK,GAAG,MAAM;EAChB,oBAAO;IAAK,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE,MAAM;MAAEH,eAAe,EAAE,WAAW;MAAEI,MAAM,EAAE;IAAM;EAAE;IAAA;IAAA;IAAA;EAAA,QAAG;AACzG,CAAC;AAAA,MAFKH,KAAK;AAIX,MAAMI,MAAM,GAAG,MAAM;EACjB,MAAMC,MAAM,GAAG,EAAE;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAED,MAAM,CAACE,IAAI,eAAC,QAAC,KAAK,MAAMD,CAAC;IAAA;IAAA;IAAA;EAAA,QAAI,CAAC;EAC5D,oBACI;IAAK,KAAK,EAAE;MAAEE,OAAO,EAAE,MAAM;MAAEC,mBAAmB,EAAE,iBAAiB;MAAEP,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAS,CAAE;IAAA,UACrGE;EAAM;IAAA;IAAA;IAAA;EAAA,QACL;AAEd,CAAC;AAAA,MARKD,MAAM;AAUZ,MAAMM,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM,CAAChB,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,WAAW,CAAC;EAC/C,oBACI,QAAC,YAAY,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEE,KAAK;MAAEC;IAAS,CAAE;IAAA,wBAC9C,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACf,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACU;AAEhC,CAAC;AAAA,GARKe,QAAQ;AAAA,MAARA,QAAQ;AASd,eAAeA,QAAQ;AAAC;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}